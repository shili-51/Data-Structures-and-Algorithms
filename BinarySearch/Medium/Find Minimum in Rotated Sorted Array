// https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/

class Solution {

    public int pivotele(int[] nums, int len){
        int start = 0;
        int end = len - 1;
        while(start <= end){
            int mid = start + (end - start)/2;
            if(mid < end && nums[mid] > nums[mid + 1]) return mid;
            else if(mid > start && nums[mid] < nums[mid - 1]) return mid - 1;
            
            // pivot at left side
            else if(nums[mid] <= nums[start]){
                end = mid - 1;
            }

            // pivot at right side
            else{
                start = mid + 1;
            }
        }
        return -1;
    }

    public int findMin(int[] nums) {
        int len = nums.length;
        if(len == 1) return nums[0];
        int peak = pivotele(nums,len);
        System.out.println(peak);
        if(peak == len - 1) peak = -1;
        return nums[peak + 1];
    }
}
