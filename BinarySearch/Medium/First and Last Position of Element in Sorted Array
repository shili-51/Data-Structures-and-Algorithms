// https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {

    public int[] searchRange(int[] nums, int target) {
        int[] result={-1,-1};
        result[0]=find(nums,target,true); //true for first occurence
        if(result[0] != -1){
            result[1]=find(nums,target,false); // false for last occurence
        }
        return result;
    }
    private int find(int[] nums,int target, boolean first){
        int ans = -1;
        int start=0;
        int end=nums.length-1;
        while(start<=end){
            int mid=(start+end)/2;
            if(nums[mid] == target){
                ans = mid;
                if(first){
                    end = mid-1;
                }
                else{
                    start = mid + 1;
                }
            }
            else if(nums[mid] > target){
                end = mid - 1;
            }
            else if (nums[mid] < target){
                start = mid + 1;
            }
        }
        return ans;
    }
    
}
