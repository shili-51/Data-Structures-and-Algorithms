// https://leetcode.com/problems/maximum-subarray/

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
       int max_sum = INT_MIN;
       int curr_sum = 0;
        for(int i=0;i<nums.size();i++)
        {
            curr_sum += nums[i];
            if(curr_sum > max_sum)
            {
                max_sum = curr_sum;
            }
            if(curr_sum<0)
                curr_sum = 0;  // carrying more negative some will be of no use , as more negative value is more smaller, (for eg if -2 is already max sum, taking -3 into curr_sum consideration will reduce sum to -5, rather take -2 and -3 as separate subarray sum which would be greater than -5 always.)
        }
        return max_sum;
    }
};
